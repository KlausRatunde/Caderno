---
title: "Planilhas Excel e Docs"
format: html
editor: visual
editor_options: 
message: false
warning: false
chunk_output_type: console
---

# Aula 02 - 13/03/2024

## Pacotes:

```{r}
library(agridat)
library(ec50estimator)
library(readxl)
library(tidyverse)
library(gsheet)
library(ggplot2)
library(agridat)
```

```{r}
dat <- data(corn)
```

## Instalando pacotes

Instalar pacotes no RStudio é um processo simples e pode ser feito de várias maneiras: através da interface gráfica do RStudio usando comandos no console R ( Tools \> Install packages), ou através de scripts R:

```{r}
# install.packages("nome_do_pacote")
```

Para acessar as funções de um pacote, basta carregá-lo no script:

```{r}
# library(nome do pacote)
```

## Importação de dados

Os dados que serão trabalhados no R podem vir de diversos bancos de dados, abaixo serão mostradas as formas de importar as informações de alguns desses bancos.

## Importar dados de planilhas Excel (.xlsx)

É comum que os dados estejam dispostos em planilhas do Excel. Para carregar planilhas de dados no formato .xlsx, basta instalar o pacote "read_excel", e executar o comando.

Obs.: Para que sejam importados no script os dados referentes à uma janela da planilha desejada, basta digitar o comando selecionando a planilha e indicando o número da janela logo após. Segue o exemplo abaixo.

```{r}
library(ec50estimator)
df1 <- multi_isolate
df1 <- multi_isolate

library(readxl)
df2 <- read_excel("dados-diversos.xlsx")
df21 <- read_excel("dados-diversos.xlsx", 2)


```

## Importar dados de arquivos .csv

Ainda é possível importar dados que são trabalhados no software do Excel, mas que apresentam um formato diferente do padrão “.xlsx”. Neste exemplo, importaremos planilhas no formato ".csv".

```{r}
library(tidyverse)
df3 <- read.csv("dados-diversos.csv")
```

## Importar dados da nuvem

Planilhas on-line disponíveis no Google Sheet.

Obs.: para usar planilhas do google, devemos copiar a url de cada janela da planilha, o comando não é capaz de buscar no google colocando apenas o número da aba, como no excel.

```{r}
library(gsheet)
df4 <-  gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing")


df5 <-  gsheet2tbl("hhttps://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")

#não usar o pacote googlesheets4, focar apenas no gsheet

#sempre usar o códico "chuck" no canto superior direito, em verde, quando usar o quarto markdown
```

# Elementos gráficos

São representações de dados obtidos nos experimentos (inferenciais e observacionais) na forma de figuras geométricas (diagramas, desenhos, figuras e imagens) de modo a fornecer ao leitor uma interpretação de forma mais rápida e objetiva.

## Criando gráficos com ggplot

No ggplot, os gráficos são construídos camada por camada. A primeira camada é dada pela função “ggplot()”, onde é determinada a estética da distribuição dos dados que serão trabalhados. A segunda camada é dada pela função “geom\_()” que vai definir o tipo de gráfico gerado.

Após a escolha do formato gráfico, é importante que se torne de fácil entendimento, com a adição de elementos visuais. Além dos pontos, criaremos o gráfico no formato Box plot, além de adicionar cores e formato dos ícones, título, tema, legenda, entre outros elementos.

```{r}

#pipe (|>): ctrl+shift+m #fatores no eixo X, repetições no eixo Y

library(ggplot2)
df4 |> 
  ggplot(aes(trat, comp))+geom_point()

df4 |> 
  ggplot(aes(trat, comp))+
  geom_boxplot(outlier.color = NA)+
  geom_jitter(width=0.05,
                                      color="black",
                                      shape="triangle",
                                      saze="3")
  
g4 <- df4 |> ggplot(aes(trat,comp))+
  geom_boxplot(outlier.colour = NA)+
  geom_jitter(width = 0.05)


g4 + theme_classic()+ labs(x="Tratamento",y="Comprimento (mm)", title= "Meu primeiro ggplot", caption = "Fonte: Dados diversos")+ scale_y_continuous(limits = c(5,20), n.breaks = 10)
ggsave("plot1.png", bg="white")

#para salvar uma imagem: ggsave("plot1.png", bg="white")

#remover a atribuição para rodar novamente o comando.
#para jogar determinado item para trás do plot, basta adicioná-lo primeiro na lista: ggplot(aes(trat, comp))+
#  geom_boxplot()+
#  geom_jitter(width=0.05,



```

Para alterar as cores e formato dos ícones no gráfico, basta realizar os comandos a seguir:

```{r}
#boxplot: representação de um conjunto de dados. Apresenta também uma mediana.

g2 <- df4 |> 
  ggplot(aes(trat, comp))+
  geom_boxplot(outlier.color = NA)+
  geom_jitter(width=0.05,
                                      color="black",
                                      shape="triangle")
                            
```
